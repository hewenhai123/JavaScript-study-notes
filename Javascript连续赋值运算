##JavaScript 连续赋值的坑

####导语：
 > 这个问题是在W3C上学习的时候看到的，在这里要注意的重点是：
 
 >1.运算符的优先级问题。
 
 >2.引用数据类型的赋值问题。
 
 
 * 问题代码
 
 下面这段代码在引擎内部到底发生了什么？
 
```$xslt
var a={n:1};
a.x=a={m:2};
alert(a.x) --->undefined
```

1.正常理解顺序：（按照从右到左复制顺序）

 * a赋值为{n:2}，a.x 发现a被重写，a.x={n:2}
  
-----
#解：

* 上面的猜想是错误的，忽略了**引用关系**和**运算符的优先级**问题

* 改写一下**代码**

```$xslt
var a={n:1};
var b=a; --->变量b指向a的引用地址
a.x=a={n:2};
console.log(a.x);
console.log(b.x);
```

* 在这里a指向了一个对象{n:1}，b指向了a所指向的对象，现在a和b的引用地址是一致的






 
 
 
 
 